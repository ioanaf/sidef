
=encoding utf8

=head1 NAME

Sidef::Types::Set::Bag

=head1 DESCRIPTION

This class implements ...

=head1 SYNOPSIS

var obj = Bag(...)


=head1 INHERITS

Inherits methods from:

       * Sidef::Types::Set::Set

=head1 METHODS

=head2 &

    I<Obj> B<&> I<Obj>

Return the

Aliases: I<∩>, I<and>, I<intersection>

=cut

=head2 +

    I<Obj> B<+> I<Obj>

Return the

Aliases: I<concat>

=cut

=head2 -

    I<Obj> B<-> I<Obj>

Return the

Aliases: I<∖>, I<sub>, I<diff>, I<difference>

=cut

=head2 ...

    I<Obj> B<...> I<Obj>

Return the

Aliases: I<to_list>

=cut

=head2 <<

    I<Obj> B<E<lt>E<lt>> I<Obj>

Return the

Aliases: I<add>, I<push>, I<append>

=cut

=head2 ^

    I<Obj> B<^> I<Obj>

Return the

Aliases: I<xor>, I<symdiff>, I<symmetric_difference>

=cut

=head2 |

    I<Obj> B<|> I<Obj>

Return the

Aliases: I<∪>, I<or>, I<union>

=cut

=head2 ∋

    I<Obj> B<∋> I<Obj>

Return the

Aliases: I<has>, I<exists>, I<has_key>, I<haskey>, I<contain>, I<include>, I<contains>, I<includes>

=cut

=head2 ∌

    I<Obj> B<∌> I<Obj>

Return the

=cut

=head2 ≠

    I<Obj> B<≠> I<Obj>

Return the

Aliases: I<!=>, I<ne>

=cut

=head2 ≡

    I<Obj> B<≡> I<Obj>

Return the

Aliases: I<==>, I<eq>

=cut

=head2 ≤

    I<Obj> B<≤> I<Obj>

Return the

Aliases: I<⊆>, I<E<lt>=>, I<is_subset>

=cut

=head2 ≥

    I<Obj> B<≥> I<Obj>

Return the

Aliases: I<⊇>, I<E<gt>=>, I<is_superset>

=cut

=head2 add_kv

    Bag.add_kv()

Return the

Aliases: I<push_kv>, I<add_pair>, I<append_kv>, I<push_pair>, I<append_pair>

=cut

=head2 add_kvs

    Bag.add_kvs()

Return the

Aliases: I<push_kvs>, I<add_pairs>, I<append_kvs>, I<push_pairs>, I<append_pairs>

=cut

=head2 clone

    Bag.clone()

Return the

=cut

=head2 collect

    Bag.collect()

Return the

=cut

=head2 contains_all

    Bag.contains_all()

Return the

=cut

=head2 count_by

    Bag.count_by()

Return the

=cut

=head2 delete

    Bag.delete()

Return the

Aliases: I<remove>, I<discard>

=cut

=head2 delete_all

    Bag.delete_all()

Return the

Aliases: I<remove_all>, I<discard_all>

=cut

=head2 delete_first_if

    Bag.delete_first_if()

Return the

=cut

=head2 delete_if

    Bag.delete_if()

Return the

=cut

=head2 delete_key

    Bag.delete_key()

Return the

Aliases: I<remove_key>, I<discard_key>

=cut

=head2 dump

    Bag.dump()

Return the

=cut

=head2 each

    Bag.each()

Return the

=cut

=head2 each_2d

    Bag.each_2d()

Return the

=cut

=head2 each_kv

    Bag.each_kv()

Return the

=cut

=head2 elems

    Bag.elems()

Return the

Aliases: I<keys_len>

=cut

=head2 freq

    Bag.freq()

Return the

=cut

=head2 get

    Bag.get()

Return the

Aliases: I<count>

=cut

=head2 grep

    Bag.grep()

Return the

Aliases: I<select>

=cut

=head2 grep_2d

    Bag.grep_2d()

Return the

=cut

=head2 grep_kv

    Bag.grep_kv()

Return the

=cut

=head2 iter

    Bag.iter()

Return the

=cut

=head2 join

    Bag.join()

Return the

=cut

=head2 keys

    Bag.keys()

Return the

=cut

=head2 kv

    Bag.kv()

Return the

Aliases: I<pairs>

=cut

=head2 len

    Bag.len()

Return the

Aliases: I<size>, I<length>

=cut

=head2 map

    Bag.map()

Return the

=cut

=head2 map_2d

    Bag.map_2d()

Return the

=cut

=head2 map_kv

    Bag.map_kv()

Return the

=cut

=head2 max

    Bag.max()

Return the

=cut

=head2 max_by

    Bag.max_by()

Return the

=cut

=head2 min

    Bag.min()

Return the

=cut

=head2 min_by

    Bag.min_by()

Return the

=cut

=head2 new

    Bag.new()

Return the

Aliases: I<call>

=cut

=head2 pop

    Bag.pop()

Return the

=cut

=head2 set_kv

    Bag.set_kv()

Return the

Aliases: I<update_kv>, I<update_pair>, I<replace_pair>

=cut

=head2 set_kvs

    Bag.set_kvs()

Return the

Aliases: I<update_kvs>, I<update_pairs>, I<replace_pairs>

=cut

=head2 shift

    Bag.shift()

Return the

=cut

=head2 sort

    Bag.sort()

Return the

=cut

=head2 sort_by

    Bag.sort_by()

Return the

=cut

=head2 to_a

    Bag.to_a()

Return the

Aliases: I<expand>, I<to_array>

=cut

=head2 to_bag

    Bag.to_bag()

Return the

=cut

=head2 top

    Bag.top()

Return the

Aliases: I<most_common>

=cut

=head2 to_set

    Bag.to_set()

Return the

=cut

=head2 uniq

    Bag.uniq()

Return the

Aliases: I<unique>

=cut

=head2 values

    Bag.values()

Return the

=cut
