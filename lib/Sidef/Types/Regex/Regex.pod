
=encoding utf8

=head1 NAME

Sidef::Types::Regex::Regex

=head1 DESCRIPTION

This class implements ...

=head1 SYNOPSIS

var obj = Regex(...)


=head1 INHERITS

Inherits methods from:

       * Sidef::Object::Object

=head1 METHODS

=head2 +

    I<Obj> B<+> I<Obj>

Return the

Aliases: I<add>, I<concat>

=cut

=head2 <

    I<Obj> B<E<lt>> I<Obj>

Return the

Aliases: I<lt>

=cut

=head2 <=>

    I<Obj> B<E<lt>=E<gt>> I<Obj>

Return the

Aliases: I<cmp>

=cut

=head2 ==

    I<Obj> B<==> I<Obj>

Return the

Aliases: I<eq>

=cut

=head2 =~

    I<Obj> B<=~> I<Obj>

Return the

Aliases: I<run>, I<match>

=cut

=head2 >

    I<Obj> B<E<gt>> I<Obj>

Return the

Aliases: I<gt>

=cut

=head2 |

    I<Obj> B<|> I<Obj>

Return the

Aliases: I<union>

=cut

=head2 ≠

    I<Obj> B<≠> I<Obj>

Return the

Aliases: I<!=>, I<ne>

=cut

=head2 ≤

    I<Obj> B<≤> I<Obj>

Return the

Aliases: I<E<lt>=>, I<le>

=cut

=head2 ≥

    I<Obj> B<≥> I<Obj>

Return the

Aliases: I<E<gt>=>, I<ge>

=cut

=head2 call

    Regex.call()

Return the

=cut

=head2 gmatch

    Regex.gmatch()

Return the

Aliases: I<global_match>

=cut

=head2 gmatches

    Regex.gmatches()

Return the

Aliases: I<all_matches>, I<map_matches>, I<global_matches>, I<repeated_match>

=cut

=head2 to_re

    Regex.to_re()

Return the

Aliases: I<to_regex>

=cut

=head2 to_s

    Regex.to_s()

Return the

Aliases: I<dump>, I<to_str>

=cut
